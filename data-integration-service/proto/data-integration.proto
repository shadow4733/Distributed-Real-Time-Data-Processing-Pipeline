syntax = "proto3";

option go_package = "internal/proto";

import "google/protobuf/timestamp.proto";

// Сервис для обработки данных
service DataProcessingService {
  // Метод для обработки данных
  rpc ProcessData (DataRecord) returns (ProcessResponse);

  // Метод для получения метаданных данных по ID
  rpc GetMetadata (MetadataRequest) returns (MetadataResponse);

  // Метод для получения отчетов об ошибках для определенной записи данных
  rpc GetErrorReport (ErrorReportRequest) returns (ErrorReportResponse);

  // Метод для потоковой передачи данных
  rpc StreamData (stream DataRecord) returns (stream ProcessResponse);

  // Метод для получения списка записей данных с пагинацией
  rpc ListDataRecords (ListDataRequest) returns (ListDataResponse);

  // Метод для удаления записи данных по ID
  rpc DeleteDataRecord (DeleteDataRequest) returns (DeleteDataResponse);

  // Метод для обновления статуса записи данных
  rpc UpdateDataStatus (UpdateStatusRequest) returns (UpdateStatusResponse);

  // Метод для получения состояния данных (статуса)
  rpc GetDataStatus (DataStatusRequest) returns (DataStatusResponse);

  // Метод для получения всех данных с определенного источника
  rpc GetDataBySource (SourceDataRequest) returns (SourceDataResponse);

  // Метод для получения отчета о всех ошибках, связанный с данными
  rpc GetAllErrorReports (AllErrorReportsRequest) returns (AllErrorReportsResponse);
}

// Структура данных для записи данных
message DataRecord {
  string dataID = 1; // Уникальный идентификатор данных
  string sourceId = 2; // Идентификатор источника данных
  bytes dataPayload = 3; // Данные в сыром формате
  google.protobuf.Timestamp timestamp = 4; // Время создания записи данных
  string status = 5; // Статус обработки данных
  google.protobuf.Timestamp processedAt = 6; // Время обработки данных
  string errorMessage = 7; // Сообщение об ошибке, если есть
  int32 errorCode = 8; // Код ошибки, если есть
  string category = 9; // Категория данных (например, "weather", "economic", и т. д.)
}

// Ответ на запрос обработки данных
message ProcessResponse {
  bool success = 1; // Успешность обработки данных
  string message = 2; // Сообщение об ошибке или успехе
}

// Запрос метаданных для конкретных данных
message MetadataRequest {
  string dataID = 1; // Уникальный идентификатор данных
}

// Ответ с метаданными
message MetadataResponse {
  string dataID = 1; // Идентификатор данных
  string source = 2; // Источник данных
  string format = 3; // Формат данных
  int64 size = 4; // Размер данных
  google.protobuf.Timestamp timestamp = 5; // Время получения метаданных
  string category = 6;
}

// Запрос для отчета об ошибках
message ErrorReportRequest {
  string dataID = 1; // Идентификатор данных для запроса отчета
}

// Ответ с отчетом об ошибках
message ErrorReportResponse {
  repeated ErrorReport errors = 1; // Список ошибок для данных
}

// Структура для описания ошибки
message ErrorReport {
  int32 errorCode = 1; // Код ошибки
  string errorMessage = 2; // Сообщение об ошибке
  string dataID = 3; // Идентификатор данных
  google.protobuf.Timestamp timestamp = 4; // Время возникновения ошибки
}

// Запрос для получения списка данных с пагинацией
message ListDataRequest {
  int32 page = 1; // Номер страницы
  int32 pageSize = 2; // Количество записей на странице
}

// Ответ со списком данных
message ListDataResponse {
  repeated DataRecord records = 1; // Список записей данных
}

// Запрос на удаление записи данных по ID
message DeleteDataRequest {
  string dataID = 1; // Уникальный идентификатор данных
}

// Ответ на запрос удаления записи данных
message DeleteDataResponse {
  bool success = 1; // Успешность удаления данных
  string message = 2; // Сообщение об удалении
}

// Запрос на обновление статуса записи данных
message UpdateStatusRequest {
  string dataID = 1; // Идентификатор данных
  string newStatus = 2; // Новый статус
}

// Ответ на запрос обновления статуса данных
message UpdateStatusResponse {
  bool success = 1; // Успешность обновления статуса
  string message = 2; // Сообщение об обновлении статуса
}

// Запрос на получение статуса данных
message DataStatusRequest {
  string dataID = 1; // Идентификатор данных
}

// Ответ на запрос статуса данных
message DataStatusResponse {
  string dataID = 1; // Идентификатор данных
  string status = 2; // Статус данных
  google.protobuf.Timestamp processedAt = 3; // Время последней обработки данных
}

// Запрос на получение данных по источнику
message SourceDataRequest {
  string sourceId = 1; // Идентификатор источника
}

// Ответ на запрос данных по источнику
message SourceDataResponse {
  repeated DataRecord records = 1; // Список записей данных из источника
}

// Запрос на получение всех отчетов об ошибках
message AllErrorReportsRequest {}

// Ответ с отчетами об ошибках для всех данных
message AllErrorReportsResponse {
  repeated ErrorReport reports = 1; // Список отчетов об ошибках
}
